l
test("test-split_train_and_test.R")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
test(filter="split")
check()
example("KMEANS", package="UnsupLP1")
example("KMEANS", package="UnsupLP1") + results
install("UnsupLP1")
library(UnsupLP1)
example("KMEANS", package="UnsupLP1")
example("KMEANS")
example(split_train_and_test)
check()
document()
load_all()
check()
git st
build_readme()
git st
example(split_train_and_test, "UnsupLP1")
library(devtools)
build_readme()
load_all()
example(split_train_and_test, "UnsupLP1")
check()
build_readme()
git st
check()
install.packages("devtools")
initial.point.indices <- c(13, 68, 107)
#' \item{`centers`}{a matrix of cluster centers, with K rows, and M columns.}
#' \item{`withinss`}{a vector of length K, containing within-cluster sums of squares for each cluster.}
#' \item{`tot.withinss`}{the total within-cluster sum of squares}
#' \item{`size`}{a vector of length K, containing the number of points in each cluster.}
#'
#' @export
#'
#' @examples
#' # Cluster the iris data set into three clusters:
#' KMEANS(iris[1:4], K=3)
KMEANS <- function(data_matrix, K){
withinss <- numeric(length=K)
# select K points from the elements in the data for initial cluster centers
observation.indices <- 1:NROW(data_matrix)
initial.point.indices <- c(13, 68, 107)
# initial.point.indices <- sample(observation.indices, K)
centers <- data_matrix[initial.point.indices, ,drop=FALSE]
last.tot.withinss <- NULL
iteration <- 1
while (iteration < 11) {
cluster <- NULL
size <- numeric(length=K)
# Assign each point to the nearest cluster
for (observation in 1:NROW(data_matrix))
{
min.norm <- NULL
for (center in 1:NROW(centers))
{
diff = data_matrix[observation, ] - centers[center, ]
local.norm <- norm(diff, type="2")
if (is.null(min.norm) || (local.norm < min.norm)){
arg.min <- center
min.norm <- local.norm
}
}
cluster <- c(cluster, arg.min)
# calculate withinss and size while we're already looping
obs.local.ss <- sum((data_matrix[observation, ] - centers[arg.min, ])^2)
withinss[arg.min] <- withinss[arg.min] + obs.local.ss
size[arg.min] <- size[arg.min] + 1
}
tot.withinss <- sum(withinss)
# terminate main loop if tot.withinss has converged, unless first iteration
if (!is.null(last.tot.withinss) && (tot.withinss == last.tot.withinss)) {
break
}
# find new cluster means
for (k in 1:NROW(centers)){
mask <- which(cluster == k)
centers[k, ]<- colMeans(data_matrix[mask, ])
}
# increment counter and repeat as needed
iteration = iteration + 1
}
# return stored results
return (list(cluster=cluster,
centers=centers,
withinss=withinss,
tot.withinss=tot.withinss,
size=size))
}
KMEANS(iris[, 1:4], 3)
?norm
norm()
norm
svd
La.svd
library(data.table)
set.seed(0)
myris <- iris[1, 4]
init.centers <- myris[c(13, 68, 107)]
stuff <- stats::kmeans(myris, init.centers, algorithm = "Lloyd", iter.max=100)
init.centers
myris
myris <- iris[, 1:4]
init.centers <- myris[c(13, 68, 107)]
init.centers <- myris[c(13, 68, 107),]
stuff <- stats::kmeans(myris, init.centers, algorithm = "Lloyd", iter.max=100)
stuff
myris[107,]
?prcomp
datas <- data.table(seq.run.time=data.table(,c(5=8.722372, 10=27.166801, 15=140.110077, 25=453.748933)))
datas <- data.table(seq.run.time=data.table(,c("5"=8.722372, "10"=27.166801, "15"=140.110077, "25"=453.748933)))
library(data.table)
datas <- data.table(seq.run.time=data.table(,c("5"=8.722372, "10"=27.166801, "15"=140.110077, "25"=453.748933)))
c("5", 8.722372, 5.371310, 1.623881)
c(8.722372, 5.371310, 1.623881)
datas <- data.table("5"=c(8.722372, 5.371310, 1.623881))
datas
datas <- data.table("5"=c(8.722372, 5.371310, 1.623881),
"10"=c2, c(27.166801, 17.185837, 1.580766),
"15"=c(140.110077, 96.897912, 1.445955),
"25"=c(453.748933, 312.411563, 1.452407))
datas <- data.table("5"=c(8.722372, 5.371310, 1.623881),
"10"=c(27.166801, 17.185837, 1.580766),
"15"=c(140.110077, 96.897912, 1.445955),
"25"=c(453.748933, 312.411563, 1.452407))
datas
datas <- data.table("5"=c(8.722372, 5.371310, 1.623881),
"10"=c(27.166801, 17.185837, 1.580766),
"15"=c(140.110077, 96.897912, 1.445955),
"25"=c(453.748933, 312.411563, 1.452407),
"label"=c("Serial", "Parallel", "Speedup"))
datas
datas[1:2,]
data.long <- melt(datas, id.vars="label", measure.vars=c("5", "10", "15", "25"))
data.long
data.long <- melt(datas, id.vars="label", measure.vars=c("5", "10", "15", "25"), variable.factor=FALSE)
data.long <- melt(datas, id.vars="label", measure.vars=c("5", "10", "15", "25"),
variable.factor=FALSE, variable.name="K Cores")
data.long
data.long <- melt(datas, id.vars="label", measure.vars=c("5", "10", "15", "25"),
variable.factor=FALSE, variable.name="K Centroids")
data.long
ggplot() +
geom_line(aes(x="K Centroids", y=value, color=label),
data=data.long[label=="Serial" | label=="Parallel"])
library(ggplot2)
ggplot() +
geom_line(aes(x="K Centroids", y=value, color=label),
data=data.long[label=="Serial" | label=="Parallel"])
data.long$`K Centroids` <- as.numeric(data.long$`K Centroids`)
ggplot() +
geom_line(aes(x="K Centroids", y=value, color=label),
data=data.long[label=="Serial" | label=="Parallel"])
=data.long[label=="Serial" | label=="Parallel"]
ggplot() +
geom_line(aes(x="K Centroids", y=value, color=label),
data=data.long[(label=="Serial" | label=="Parallel"),])
data.long[(label=="Serial" | label=="Parallel"),]
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.long[(label=="Serial" | label=="Parallel"),])
"
ggplot() +
geom_line(aes(x="K Centroids", y=value, color=label),
data=data.long[(label=="Serial" | label=="Parallel"),])
,
ggplot() +
geom_line(aes(x="K Centroids", y=value, color=label),
data=data.long[(label=="Serial" | label=="Parallel")])
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.long[(label=="Serial" | label=="Parallel")])
data.times <- data.long[(label=="Serial" | label=="Parallel")]
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.times)
data.times <- data.long[(label=="Serial" | label=="Parallel")]
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.times)
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.times) +
scale_y_continuous(sec.axis = sec_axis(trans=~./400))
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+``)
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1)
scale_y_continuous(sec.axis = sec_axis(trans=~(./400+1))
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.times) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1))
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.times) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1), name="Speedup")
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.times) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
data.speedup <- data.long[label=="Speedup"]
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=value), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=value), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=value*400), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=value*400-1), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
geom_line(aes(x=`K Centroids`, y=((value*400)-1), data=data.speedup) +
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(value*400)-1), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
]
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(value*400)-1), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
geom_line(aes(x=`K Centroids`, y=(value-1)*400, data=data.speedup) +
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(value-1)*400), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(value-1)*400), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(value-1)*400), data=data.speedup, color=Speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(value-1)*400), data=data.speedup, color="Speedup") +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(value-1)*400), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(value-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
(data.times <- data.long[(label=="Serial" | label=="Parallel")])
names(data.times)
names(data.times[0])
names(data.times[1])
names(data.times) <- c("Algorithm", "K Centroids", "Time (S)")
data.times
(data.speedup <- data.long[label=="Speedup"])
names(data.speedup[3]) <- "Speedup"
data.speedup
names(data.speedup[3]) <- "Speedup"
data.speedup
names(data.speedup)[3] <- "Speedup"
data.speedup
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(value-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=`Time (S)`),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(value-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Algorithm),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(value-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Algorithm),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
names(data.times) <- c("Key", "K Centroids", "Time (S)")
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Algorithm),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.text.y.right = element_text(angle=180))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.text.y.right = element_text(angle=180))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.text.y.right = element_text(angle=90))
180
180
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.text.y.right = element_text(angle=0))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=180))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=90))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=30))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=180))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=90))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = 0))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = 50))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = 5))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = 1))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = .6))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = .5))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = .5),
axis.title.y.left = element_text(angle=0, vjust = .5))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = .5),
axis.title.y.left = element_text(angle=0, vjust = .5))
datas <- data.table("5"=c(8.722372, 3.737203, 2.333930),
"10"=c(27.166801, 10.894545, 2.493615),
"15"=c(140.110077, 58.985418, 2.375334),
"25"=c(453.748933, 208.646101, 2.174729),
"label"=c("Serial", "Parallel", "Speedup"))
data.long <- melt(datas, id.vars="label", measure.vars=c("5", "10", "15", "25"),
variable.factor=FALSE, variable.name="K Centroids")
data.long$`K Centroids` <- as.numeric(data.long$`K Centroids`)
data.times <- data.long[(label=="Serial" | label=="Parallel")]
names(data.times) <- c("Key", "K Centroids", "Time (S)")
(data.speedup <- data.long[label=="Speedup"])
data.long$`K Centroids` <- as.numeric(data.long$`K Centroids`)
data.long <- melt(datas, id.vars="label", measure.vars=c("5", "10", "15", "25"),
variable.factor=FALSE, variable.name="K Centroids")
library(data.table)
library(ggplot2)
datas <- data.table("5"=c(8.722372, 3.737203, 2.333930),
"10"=c(27.166801, 10.894545, 2.493615),
"15"=c(140.110077, 58.985418, 2.375334),
"25"=c(453.748933, 208.646101, 2.174729),
"label"=c("Serial", "Parallel", "Speedup"))
data.long <- melt(datas, id.vars="label", measure.vars=c("5", "10", "15", "25"),
variable.factor=FALSE, variable.name="K Centroids")
data.long$`K Centroids` <- as.numeric(data.long$`K Centroids`)
data.times <- data.long[(label=="Serial" | label=="Parallel")]
names(data.times) <- c("Key", "K Centroids", "Time (S)")
(data.speedup <- data.long[label=="Speedup"])
names(data.speedup)[3] <- "Speedup"
data.speedup
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = .5),
axis.title.y.left = element_text(angle=0, vjust = .5))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400), name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = .5),
axis.title.y.left = element_text(angle=0, vjust = .5))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-2)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+2, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = .5),
axis.title.y.left = element_text(angle=0, vjust = .5))
build_readme()
library(devtools)
build_readme()
check()
check()
check()
library(devtools)
check()
install.packages("devtools")
devtools::install_github("ChrisKeefe/UnsupLP2")
devtools::install_github("ChrisKeefe/UnsupLP2")
load_all()
print(foober())
