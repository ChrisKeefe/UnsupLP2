names(data.times) <- c("Algorithm", "K Centroids", "Time (S)")
data.times
(data.speedup <- data.long[label=="Speedup"])
names(data.speedup[3]) <- "Speedup"
data.speedup
names(data.speedup[3]) <- "Speedup"
data.speedup
names(data.speedup)[3] <- "Speedup"
data.speedup
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=label),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(value-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
ggplot() +
geom_line(aes(x=`K Centroids`, y=value, color=`Time (S)`),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(value-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Algorithm),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(value-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Algorithm),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
names(data.times) <- c("Key", "K Centroids", "Time (S)")
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Algorithm),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup"))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.text.y.right = element_text(angle=180))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.text.y.right = element_text(angle=180))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.text.y.right = element_text(angle=90))
180
180
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.text.y.right = element_text(angle=0))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=180))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=90))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=30))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=180))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=90))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = 0))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = 50))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = 5))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = 1))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = .6))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = .5))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = .5),
axis.title.y.left = element_text(angle=0, vjust = .5))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = .5),
axis.title.y.left = element_text(angle=0, vjust = .5))
datas <- data.table("5"=c(8.722372, 3.737203, 2.333930),
"10"=c(27.166801, 10.894545, 2.493615),
"15"=c(140.110077, 58.985418, 2.375334),
"25"=c(453.748933, 208.646101, 2.174729),
"label"=c("Serial", "Parallel", "Speedup"))
data.long <- melt(datas, id.vars="label", measure.vars=c("5", "10", "15", "25"),
variable.factor=FALSE, variable.name="K Centroids")
data.long$`K Centroids` <- as.numeric(data.long$`K Centroids`)
data.times <- data.long[(label=="Serial" | label=="Parallel")]
names(data.times) <- c("Key", "K Centroids", "Time (S)")
(data.speedup <- data.long[label=="Speedup"])
data.long$`K Centroids` <- as.numeric(data.long$`K Centroids`)
data.long <- melt(datas, id.vars="label", measure.vars=c("5", "10", "15", "25"),
variable.factor=FALSE, variable.name="K Centroids")
library(data.table)
library(ggplot2)
datas <- data.table("5"=c(8.722372, 3.737203, 2.333930),
"10"=c(27.166801, 10.894545, 2.493615),
"15"=c(140.110077, 58.985418, 2.375334),
"25"=c(453.748933, 208.646101, 2.174729),
"label"=c("Serial", "Parallel", "Speedup"))
data.long <- melt(datas, id.vars="label", measure.vars=c("5", "10", "15", "25"),
variable.factor=FALSE, variable.name="K Centroids")
data.long$`K Centroids` <- as.numeric(data.long$`K Centroids`)
data.times <- data.long[(label=="Serial" | label=="Parallel")]
names(data.times) <- c("Key", "K Centroids", "Time (S)")
(data.speedup <- data.long[label=="Speedup"])
names(data.speedup)[3] <- "Speedup"
data.speedup
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-1)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+1, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = .5),
axis.title.y.left = element_text(angle=0, vjust = .5))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400), name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = .5),
axis.title.y.left = element_text(angle=0, vjust = .5))
ggplot() +
geom_line(aes(x=`K Centroids`, y=`Time (S)`, color=Key),
data=data.times) +
geom_line(aes(x=`K Centroids`, y=(Speedup-2)*400, color=label), data=data.speedup) +
scale_y_continuous(sec.axis = sec_axis(trans=~(./400)+2, name="Speedup")) +
theme(axis.title.y.right = element_text(angle=0, vjust = .5),
axis.title.y.left = element_text(angle=0, vjust = .5))
build_readme()
library(devtools)
build_readme()
check()
check()
check()
library(devtools)
check()
install.packages("devtools")
devtools::install_github("ChrisKeefe/UnsupLP2")
devtools::install_github("ChrisKeefe/UnsupLP2")
load_all()
print(foober())
?prcomp
?prcomp
iris
check()
library(devtools)
check()
check()
?prcomp
check()
check()
load_all()
(iris.fit <- PCA(iris[1:4]))
iris.fit <- PCA(iris[1:4])
iris.fit <- PCA(iris[1:4])
PCA(iris[1:4])
PCA(iris[1:4])
iris.fit <- PCA(iris[1:4])
iris.fit <- PCA(iris[1:4])
iris.fit <- PCA(iris[1:4])
load_all()
iris.fit <- PCA(iris[1:4])
load_all()
PCA(iris[1:4])
iris.fit <- PCA(iris[1:4])
prcomp(iris[1:4])
thing <- prcomp(iris[1:4])
thing$center
scaled <- scale(iris[1:4], center=TRUE, scale=FALSE)
scaled
scaled$center
scaled.center
scaled
?scale
scaled:center
attributes(scaled)
attributes(scaled)[[center]]
attributes(scaled, center)
attributes(scaled, scaled:center)
attributes(scaled)
attributes(scaled, `scaled:center`)
attributes(scaled)[['scaled:center']]
?center
iris.fit <- PCA(iris[1:4])
load_all()
PCA(iris[1:4])
iris.fit <- PCA(iris[1:4])
PCA(iris[1:4])
load_all()
PCA(iris[1:4])
load_all()
iris.fit <- PCA(iris[1:4])
iris.fit
prcomp(iris[1:4])
thing <- prcomp(iris[1:4])
thing$center
thing$x
thing$rotation
load_all()
thing <- prcomp(iris[1:4])
thing <- PCA(iris[1:4])
thing$center
thing$x
load_all()
thing <- PCA(iris[1:4])
thing$x
ncol(data.matrix)
ncol(iris[1:4])
seq.int(ncol(iris[1:4]))
load_all()
thing <- PCA(iris[1:4])
thing$x
load_all()
ncol(iris[1:4])
thing <- PCA(iris[1:4])
thing$x
load_all()
thing <- PCA(iris[1:4])
thing$x
paste0("PC", seq.int(ncol(data.matrix),sep=""))
paste0("PC", seq.int(ncol(iris[1:4]),sep=""))
paste("PC", seq.int(ncol(iris[1:4]),sep=""))
seq.int(ncol(iris[1:4]),sep="")
seq.int(ncol(iris[1:4]))
paste0("PC", seq.int(ncol(iris[1:4])))
load_all()
thing <- PCA(iris[1:4])
thing$x
library(ggplot2)
ggplot() +
geom_point(aes(PC1, PC2, color=species), data=thing)
geom_point(aes(PC1, PC2, color=species), data=thing$x)
thing$x$species <- iris[5]
thing$x
ggplot() +
geom_point(aes(PC1, PC2, color=species), data=thing$x)
geom_point(aes(PC1, PC2, color=species), data=thing[[x]])
load_all()
iris.fit <- PCA(iris[1:4])
iris.fit$center
typeof(iris.fit$center)
str(iris.fit$center)
iris.pcs <- as.data.frame(iris.fit$x)
iris.pcs
labeled.iris.pcs <- iris.pcs$species <- iris[5]
labeled.iris.pcs
iris.pcs
ggplot() +
geom_point(aes(PC1, PC2, color=species), data=iris.pcs)
typeof(iris.pcs)
(iris.fit <- PCA(iris[1:4]))
iris.pcs <- as.data.frame(iris.fit[["x"]])
iris.pcs
typeof(iris.pcs)
typeof(iris.fit[["x"]])
typeof(iris.fit[[x]])
typeof(iris.fit[['x']])
typeof(as.data.frame(iris.fit[['x']]))
(iris.fit <- PCA(iris[1:4]))
typeof(iris.fit[["x"]])
iris.fit[["x"]]
thingy <- iris.fit[["x"]]
typeof(thingy)
thungy = iris.fit$x
typeof(thungy)
iris.fit[[3]]
x = iris.fit[[3]]
typeof(x)
x = unlist(x)
typeof(x)
x
x = as.data.frame(iris.fit[[3]])
typeof(x)
#' # re-apply labels...
#' iris.pcs$Species <- iris[5]
#'
#' # ... then plot a 2D projection of the data
#' # NOT RUN {
#'   library(ggplot2)
#'   ggplot() +
#'   geom_point(aes(PC1, PC2, color=species), data=iris.pcs)
#' }
#'
PCA <- function(data.matrix){
# standardize the columns
my.center <- scale(data.matrix, center = TRUE, scale=FALSE)
center.means <- attributes(my.center)[['scaled:center']]
# calculate svd
svd.res <- svd(my.center)
# capture rotation and x matrices
rotation <- svd.res$v
x <- svd.res$u %*% diag(svd.res$d)
# rename x and rotation df
rotation <- as.data.frame(rotation)
names(rotation) <- paste0("PC", seq.int(ncol(data.matrix)))
x <- as.data.frame(x)
names(x) <- paste0("PC", seq.int(ncol(data.matrix)))
print(typeof(x))
return(list("center"=center.means, "rotation"=rotation,
"x"=x))
}
load_all()
(iris.fit <- PCA(iris[1:4]))
#' # re-apply labels...
#' iris.pcs$Species <- iris[5]
#'
#' # ... then plot a 2D projection of the data
#' # NOT RUN {
#'   library(ggplot2)
#'   ggplot() +
#'   geom_point(aes(PC1, PC2, color=species), data=iris.pcs)
#' }
#'
PCA <- function(data.matrix){
# standardize the columns
my.center <- scale(data.matrix, center = TRUE, scale=FALSE)
center.means <- attributes(my.center)[['scaled:center']]
# calculate svd
svd.res <- svd(my.center)
# capture rotation and x matrices
rotation <- svd.res$v
x <- svd.res$u %*% diag(svd.res$d)
# rename x and rotation df
rotation <- as.data.frame(rotation)
names(rotation) <- paste0("PC", seq.int(ncol(data.matrix)))
x <- as.data.frame(x)
print(typeof(x))
names(x) <- paste0("PC", seq.int(ncol(data.matrix)))
print(typeof(x))
return(list("center"=center.means, "rotation"=rotation,
"x"=x))
}
iris.fit <- PCA(iris[1:4])
#' # re-apply labels...
#' iris.pcs$Species <- iris[5]
#'
#' # ... then plot a 2D projection of the data
#' # NOT RUN {
#'   library(ggplot2)
#'   ggplot() +
#'   geom_point(aes(PC1, PC2, color=species), data=iris.pcs)
#' }
#'
PCA <- function(data.matrix){
# standardize the columns
my.center <- scale(data.matrix, center = TRUE, scale=FALSE)
center.means <- attributes(my.center)[['scaled:center']]
# calculate svd
svd.res <- svd(my.center)
# capture rotation and x matrices
rotation <- svd.res$v
x <- svd.res[[u]] %*% diag(svd.res[[d]])
# rename x and rotation df
rotation <- as.data.frame(rotation)
names(rotation) <- paste0("PC", seq.int(ncol(data.matrix)))
x <- as.data.frame(x)
print(typeof(x))
names(x) <- paste0("PC", seq.int(ncol(data.matrix)))
print(typeof(x))
return(list("center"=center.means, "rotation"=rotation,
"x"=x))
}
iris.fit <- PCA(iris[1:4])
#' # re-apply labels...
#' iris.pcs$Species <- iris[5]
#'
#' # ... then plot a 2D projection of the data
#' # NOT RUN {
#'   library(ggplot2)
#'   ggplot() +
#'   geom_point(aes(PC1, PC2, color=species), data=iris.pcs)
#' }
#'
PCA <- function(data.matrix){
# standardize the columns
my.center <- scale(data.matrix, center = TRUE, scale=FALSE)
center.means <- attributes(my.center)[['scaled:center']]
# calculate svd
svd.res <- svd(my.center)
# capture rotation and x matrices
rotation <- svd.res$v
x <- svd.res[["u"]] %*% diag(svd.res[["d"]])
# rename x and rotation df
rotation <- as.data.frame(rotation)
names(rotation) <- paste0("PC", seq.int(ncol(data.matrix)))
x <- as.data.frame(x)
print(typeof(x))
names(x) <- paste0("PC", seq.int(ncol(data.matrix)))
print(typeof(x))
return(list("center"=center.means, "rotation"=rotation,
"x"=x))
}
iris.fit <- PCA(iris[1:4])
x=iris.fit[["x"]]
mx = as.matrix(x)
mx
dfx = as.data.frame(mx)
typeof(dfx)
tx = tibble::as_tibble(x)
typeof(x)
tx = tibble::as_data_frame(x)
tx = tibble::as_tibble(x)
ggplot() +
geom_point(aes(PC1, PC2, color=Species), data=x)
geom_point(aes(PC1, PC2, color=species), data=x)
ggplot() + geom_point(aes(PC1, PC2, color=species), data=x)
ggplot() + geom_point(aes(PC1, PC2, color=Species), data=x)
ggplot() + geom_point(aes(PC1, PC2), data=x)
(iris.fit <- PCA(iris[1:4]))
iris.pcs <- as.data.frame(iris.fit[["x"]])
iris.pcs
iris.pcs$Species <- iris[5]
iris.pcs
ggplot() +
geom_point(aes(PC1, PC2, color=Species), data=iris.pcs)
geom_point(aes(PC1, PC2, color=Species), data=as.tibble(iris.pcs))
ggplot() + geom_point(aes(PC1, PC2, color=Species), data=as.tibble(iris.pcs))
ggplot() + geom_point(aes(PC1, PC2, color=Species), data=as_tibble(iris.pcs))
ggplot() + geom_point(aes(PC1, PC2, color=Species), data=tibble::as_tibble(iris.pcs))
ggplot() + geom_point(aes(PC1, PC2, color=Species), data=tibble::as_tibble(iris.pcs)) + scale_x_continuous()
ggplot() + geom_point(aes(PC1, PC2, color=Species), data=tibble::as_tibble(iris.pcs)) + scale_x_continuous() + scale_y_continuous()
ggplot() + geom_point(aes(PC1, PC2), data=tibble::as_tibble(iris.pcs))
(iris.fit <- PCA(iris[1:4]))
iris.pcs$Species <- as.character(iris[5])
iris.pcs
(iris.fit <- PCA(iris[1:4]))
iris.pcs[,"Species"] <- iris[5]
iris.pcs
(iris.fit <- PCA(iris[1:4]))
iris.pcs[,"species"] <- iris[5]
ggplot() + geom_point(aes(PC1, PC2, color=species), data=iris.pcs)
View(PCA)
